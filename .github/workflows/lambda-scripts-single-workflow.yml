on:
  workflow_call:
    inputs:
      scripts:
        required: true
        type: string
      image_tag:
        required: true
        type: string
    secrets:
      AWS_REGION:
        required: true
      AWS_ECR_ROLE:
        required: true
      AWS_LAMBDA_ROLE:
        required: true
      AWS_ECR_URL:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: Build Image and Push to ECR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        script: ${{ fromJson(inputs.scripts) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials for ECR Deploy
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ECR_URL }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_URL: ${{ secrets.AWS_ECR_URL }}
          REPO: ${{ matrix.script }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          DOCKERFILE_PATH: scripts
          CONTEXT_PATH: scripts/${{ matrix.script }}/script
        run: |
          docker build -f $DOCKERFILE_PATH -t $ECR_URL/$REPO:$IMAGE_TAG $CONTEXT_PATH
          docker push $ECR_URL/$REPO:$IMAGE_TAG

      - name: Configure AWS credentials for Lambda update
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_LAMBDA_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Lambda Function
        env:
          FUNCTION_NAME: ${{ matrix.script }}
          IMAGE_URI: ${{ secrets.AWS_ECR_URL }}/${{ matrix.script }}:${{ inputs.image_tag }}
        run: |
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --image-uri $IMAGE_URI
